name: release
on:
  push:
    tags:
      - 'v*'
    branches:
      - trunk
    paths-ignore:
      - README.md
      - LICENSE
  pull_request:
    branches:
      - trunk
    paths-ignore:
      - README.md
      - LICENSE
jobs:
  pnpm-version:
    uses: ./.github/workflows/pnpm-version.yml
  node-version:
    uses: ./.github/workflows/node-version.yml
  release:
    needs:
      - pnpm-version
      - node-version
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.node-version.outputs.value }}
      - name: install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: ${{ needs.pnpm-version.outputs.value }}
          run_install: false
      - name: get pnpm store directory
        id: pnpm-store-path
        run: |
          echo "::set-output name=value::$(pnpm store path)"
      - name: pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-store-path.outputs.value }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store
      - name: install dependencies
        run: pnpm install
      - name: typecheck
        run: pnpm run typecheck
      - name: test
        run: pnpm run test
      - name: code coverage
        uses: codecov/codecov-action@v3.1.0
      - name: build
        run: pnpm run build
      - name: write .npmrc
        if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: pnpm release
        if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
        run: |
          pnpm run release -- ${{ github.ref_name }}
      - name: github release
        if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')
        run: |
          pnpm exec changelogithub
          # gh release create ${{ github.ref_name }} --title ${{ github.ref_name }} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
